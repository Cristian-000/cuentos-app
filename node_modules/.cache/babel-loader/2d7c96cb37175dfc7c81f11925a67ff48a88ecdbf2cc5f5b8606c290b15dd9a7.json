{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferna\\\\OneDrive\\\\Escritorio\\\\cuentos-aapp-folder\\\\cuentos-app\\\\src\\\\components\\\\Story.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Story = () => {\n  _s();\n  const [storySections, setStorySections] = useState([]);\n  const {\n    categoria\n  } = useParams();\n  useEffect(() => {\n    fetch('/src/data/cuentos.json').then(response => {\n      if (!response.ok) {\n        console.log(response.json);\n        throw new Error(`Error al cargassasdar los datos: ${response.status}`);\n      }\n      console.log(response.json);\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      const categoriaData = data.cuentos.find(cuento => cuento.categoria === categoria);\n      if (!categoriaData) {\n        throw new Error(`No se encontraron datos para la categoría: ${categoria}`);\n      }\n      const tiposSecciones = categoriaData.tipos;\n      const seccionesAleatorias = tiposSecciones.map(tipo => {\n        const seccionAleatoria = categoriaData.cuentos.map(cuento => cuento.secciones[tipo]).flat().sort(() => 0.5 - Math.random()).slice(0, 1);\n        return {\n          tipo,\n          seccion: seccionAleatoria[0]\n        };\n      });\n      setStorySections(seccionesAleatorias);\n    }).catch(error => {\n      console.error('Error al cargar los datos:', error);\n    });\n  }, [categoria]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Categor\\xEDa \", categoria]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), storySections.map((seccion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: seccion.tipo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: seccion.seccion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Story, \"N6GbgCnLjoj3hW41E27DEkEoGpg=\", false, function () {\n  return [useParams];\n});\n_c = Story;\nexport default Story;\nvar _c;\n$RefreshReg$(_c, \"Story\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Story","_s","storySections","setStorySections","categoria","fetch","then","response","ok","console","log","json","Error","status","data","categoriaData","cuentos","find","cuento","tiposSecciones","tipos","seccionesAleatorias","map","tipo","seccionAleatoria","secciones","flat","sort","Math","random","slice","seccion","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/Ferna/OneDrive/Escritorio/cuentos-aapp-folder/cuentos-app/src/components/Story.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Story = () => {\r\n  const [storySections, setStorySections] = useState([]);\r\n  const { categoria } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetch('/src/data/cuentos.json')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n            console.log(response.json)\r\n          throw new Error(`Error al cargassasdar los datos: ${response.status}`);\r\n        }\r\n        console.log(response.json)\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data)\r\n        const categoriaData = data.cuentos.find((cuento) => cuento.categoria === categoria);\r\n        if (!categoriaData) {\r\n          throw new Error(`No se encontraron datos para la categoría: ${categoria}`);\r\n        }\r\n\r\n        const tiposSecciones = categoriaData.tipos;\r\n\r\n        const seccionesAleatorias = tiposSecciones.map((tipo) => {\r\n          const seccionAleatoria = categoriaData.cuentos\r\n            .map((cuento) => cuento.secciones[tipo])\r\n            .flat()\r\n            .sort(() => 0.5 - Math.random())\r\n            .slice(0, 1);\r\n\r\n          return {\r\n            tipo,\r\n            seccion: seccionAleatoria[0]\r\n          };\r\n        });\r\n\r\n        setStorySections(seccionesAleatorias);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error al cargar los datos:', error);\r\n      });\r\n  }, [categoria]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Categoría {categoria}</h2>\r\n      {storySections.map((seccion, index) => (\r\n        <div key={index}>\r\n          <h3>{seccion.tipo}</h3>\r\n          <p>{seccion.seccion}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}