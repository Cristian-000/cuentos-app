{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const Story=()=>{const[storySections,setStorySections]=useState([]);const{categoria}=useParams();const fetchData=async()=>{try{const response=await fetch('https://raw.githubusercontent.com/Cristian-000/cuentos.json/main/cuentos.json');if(!response.ok){throw new Error(\"Error al cargar los datos: \".concat(response.status));}const data=await response.json();const categoriaData=data.cuentos.find(cuento=>cuento.categoria===categoria);if(!categoriaData){throw new Error(\"No se encontraron datos para la categor\\xEDa: \".concat(categoria));}const tiposSecciones=categoriaData.tipos;const seccionesAleatorias=tiposSecciones.map(tipo=>{const seccionAleatoria=categoriaData.cuentos.map(cuento=>cuento.secciones[tipo]).flat().sort(()=>0.5-Math.random()).slice(0,1);return{tipo,seccion:seccionAleatoria[0]};});setStorySections(seccionesAleatorias);}catch(error){console.error('Error al cargar los datos:',error);}};useEffect(()=>{fetchData();},[categoria]);const handleReload=()=>{fetchData();};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Categor\\xEDa \",categoria]}),storySections.map((seccion,index)=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:seccion.seccion})},index)),/*#__PURE__*/_jsx(\"button\",{onClick:handleReload,children:\"Cargar Cuento\"})]});};export default Story;","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxs","_jsxs","jsx","_jsx","Story","storySections","setStorySections","categoria","fetchData","response","fetch","ok","Error","concat","status","data","json","categoriaData","cuentos","find","cuento","tiposSecciones","tipos","seccionesAleatorias","map","tipo","seccionAleatoria","secciones","flat","sort","Math","random","slice","seccion","error","console","handleReload","children","index","onClick"],"sources":["C:/Users/Ferna/OneDrive/Documentos/GitHub/cuentos.json/src/components/Story.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Story = () => {\r\n  const [storySections, setStorySections] = useState([]);\r\n  const { categoria } = useParams();\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch('https://raw.githubusercontent.com/Cristian-000/cuentos.json/main/cuentos.json');\r\n      if (!response.ok) {\r\n        throw new Error(`Error al cargar los datos: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n\r\n      const categoriaData = data.cuentos.find((cuento) => cuento.categoria === categoria);\r\n      if (!categoriaData) {\r\n        throw new Error(`No se encontraron datos para la categoría: ${categoria}`);\r\n      }\r\n\r\n      const tiposSecciones = categoriaData.tipos;\r\n\r\n      const seccionesAleatorias = tiposSecciones.map((tipo) => {\r\n        const seccionAleatoria = categoriaData.cuentos\r\n          .map((cuento) => cuento.secciones[tipo])\r\n          .flat()\r\n          .sort(() => 0.5 - Math.random())\r\n          .slice(0, 1);\r\n\r\n        return {\r\n          tipo,\r\n          seccion: seccionAleatoria[0]\r\n        };\r\n      });\r\n\r\n      setStorySections(seccionesAleatorias);\r\n    } catch (error) {\r\n      console.error('Error al cargar los datos:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [categoria]);\r\n\r\n  const handleReload = () => {\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Categoría {categoria}</h2>\r\n      {storySections.map((seccion, index) => (\r\n        <div key={index}>\r\n          <p>{seccion.seccion}</p>\r\n        </div>\r\n      ))}\r\n      <button onClick={handleReload}>Cargar Cuento</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAE7C,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAEU,SAAU,CAAC,CAAGR,SAAS,CAAC,CAAC,CAEjC,KAAM,CAAAS,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+EAA+E,CAAC,CAC7G,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,+BAAAC,MAAA,CAA+BJ,QAAQ,CAACK,MAAM,CAAE,CAAC,CAClE,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAElC,KAAM,CAAAC,aAAa,CAAGF,IAAI,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,EAAKA,MAAM,CAACb,SAAS,GAAKA,SAAS,CAAC,CACnF,GAAI,CAACU,aAAa,CAAE,CAClB,KAAM,IAAI,CAAAL,KAAK,kDAAAC,MAAA,CAA+CN,SAAS,CAAE,CAAC,CAC5E,CAEA,KAAM,CAAAc,cAAc,CAAGJ,aAAa,CAACK,KAAK,CAE1C,KAAM,CAAAC,mBAAmB,CAAGF,cAAc,CAACG,GAAG,CAAEC,IAAI,EAAK,CACvD,KAAM,CAAAC,gBAAgB,CAAGT,aAAa,CAACC,OAAO,CAC3CM,GAAG,CAAEJ,MAAM,EAAKA,MAAM,CAACO,SAAS,CAACF,IAAI,CAAC,CAAC,CACvCG,IAAI,CAAC,CAAC,CACNC,IAAI,CAAC,IAAM,GAAG,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAC/BC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAEd,MAAO,CACLP,IAAI,CACJQ,OAAO,CAAEP,gBAAgB,CAAC,CAAC,CAC7B,CAAC,CACH,CAAC,CAAC,CAEFpB,gBAAgB,CAACiB,mBAAmB,CAAC,CACvC,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CACF,CAAC,CAEDpC,SAAS,CAAC,IAAM,CACdU,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACD,SAAS,CAAC,CAAC,CAEf,KAAM,CAAA6B,YAAY,CAAGA,CAAA,GAAM,CACzB5B,SAAS,CAAC,CAAC,CACb,CAAC,CAED,mBACEP,KAAA,QAAAoC,QAAA,eACEpC,KAAA,OAAAoC,QAAA,EAAI,eAAU,CAAC9B,SAAS,EAAK,CAAC,CAC7BF,aAAa,CAACmB,GAAG,CAAC,CAACS,OAAO,CAAEK,KAAK,gBAChCnC,IAAA,QAAAkC,QAAA,cACElC,IAAA,MAAAkC,QAAA,CAAIJ,OAAO,CAACA,OAAO,CAAI,CAAC,EADhBK,KAEL,CACN,CAAC,cACFnC,IAAA,WAAQoC,OAAO,CAAEH,YAAa,CAAAC,QAAA,CAAC,eAAa,CAAQ,CAAC,EAClD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}