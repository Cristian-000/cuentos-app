{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferna\\\\OneDrive\\\\Escritorio\\\\cuentos-aapp-folder\\\\cuentos-app\\\\src\\\\components\\\\Story.js\",\n  _s = $RefreshSig$();\n// src/components/Story.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Story = () => {\n  _s();\n  const [storySections, setStorySections] = useState([]);\n  const {\n    categoria\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://raw.githubusercontent.com/Cristian-000/cuentos.json/main/cuentos.json');\n        if (!response.ok) {\n          throw new Error(`Error al cargar los datos: ${response.status}`);\n        }\n        const data = await response.json();\n        const categoriaData = data.cuentos.find(cuento => cuento.categoria === categoria);\n        if (!categoriaData) {\n          throw new Error(`No se encontraron datos para la categoría: ${categoria}`);\n        }\n        const tiposSecciones = categoriaData.tipos;\n        const seccionesAleatorias = tiposSecciones.map(tipo => {\n          const seccionAleatoria = categoriaData.cuentos.map(cuento => cuento.secciones[tipo]).flat().sort(() => 0.5 - Math.random()).slice(0, 1);\n          return {\n            tipo,\n            seccion: seccionAleatoria[0]\n          };\n        });\n        setStorySections(seccionesAleatorias);\n      } catch (error) {\n        console.error('Error al cargar los datos:', error);\n      }\n    };\n    fetchData();\n  }, [categoria]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Categor\\xEDa \", categoria]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), storySections.map((seccion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: seccion.seccion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Story, \"N6GbgCnLjoj3hW41E27DEkEoGpg=\", false, function () {\n  return [useParams];\n});\n_c = Story;\nexport default Story;\nvar _c;\n$RefreshReg$(_c, \"Story\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Story","_s","storySections","setStorySections","categoria","fetchData","response","fetch","ok","Error","status","data","json","categoriaData","cuentos","find","cuento","tiposSecciones","tipos","seccionesAleatorias","map","tipo","seccionAleatoria","secciones","flat","sort","Math","random","slice","seccion","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/Ferna/OneDrive/Escritorio/cuentos-aapp-folder/cuentos-app/src/components/Story.js"],"sourcesContent":["// src/components/Story.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Story = () => {\r\n  const [storySections, setStorySections] = useState([]);\r\n  const { categoria } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://raw.githubusercontent.com/Cristian-000/cuentos.json/main/cuentos.json');\r\n        if (!response.ok) {\r\n          throw new Error(`Error al cargar los datos: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n\r\n        const categoriaData = data.cuentos.find((cuento) => cuento.categoria === categoria);\r\n        if (!categoriaData) {\r\n          throw new Error(`No se encontraron datos para la categoría: ${categoria}`);\r\n        }\r\n\r\n        const tiposSecciones = categoriaData.tipos;\r\n\r\n        const seccionesAleatorias = tiposSecciones.map((tipo) => {\r\n          const seccionAleatoria = categoriaData.cuentos\r\n            .map((cuento) => cuento.secciones[tipo])\r\n            .flat()\r\n            .sort(() => 0.5 - Math.random())\r\n            .slice(0, 1);\r\n\r\n          return {\r\n            tipo,\r\n            seccion: seccionAleatoria[0]\r\n          };\r\n        });\r\n\r\n        setStorySections(seccionesAleatorias);\r\n      } catch (error) {\r\n        console.error('Error al cargar los datos:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [categoria]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Categoría {categoria}</h2>\r\n      {storySections.map((seccion, index) => (\r\n        <div key={index}>\r\n          \r\n          <p>{seccion.seccion}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Story;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAES;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+EAA+E,CAAC;QAC7G,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,8BAA6BH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAClE;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAElC,MAAMC,aAAa,GAAGF,IAAI,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACZ,SAAS,KAAKA,SAAS,CAAC;QACnF,IAAI,CAACS,aAAa,EAAE;UAClB,MAAM,IAAIJ,KAAK,CAAE,8CAA6CL,SAAU,EAAC,CAAC;QAC5E;QAEA,MAAMa,cAAc,GAAGJ,aAAa,CAACK,KAAK;QAE1C,MAAMC,mBAAmB,GAAGF,cAAc,CAACG,GAAG,CAAEC,IAAI,IAAK;UACvD,MAAMC,gBAAgB,GAAGT,aAAa,CAACC,OAAO,CAC3CM,GAAG,CAAEJ,MAAM,IAAKA,MAAM,CAACO,SAAS,CAACF,IAAI,CAAC,CAAC,CACvCG,IAAI,CAAC,CAAC,CACNC,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAC/BC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;UAEd,OAAO;YACLP,IAAI;YACJQ,OAAO,EAAEP,gBAAgB,CAAC,CAAC;UAC7B,CAAC;QACH,CAAC,CAAC;QAEFnB,gBAAgB,CAACgB,mBAAmB,CAAC;MACvC,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDzB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC;EAEf,oBACEL,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,GAAI,eAAU,EAAC5B,SAAS;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7BlC,aAAa,CAACkB,GAAG,CAAC,CAACS,OAAO,EAAEQ,KAAK,kBAChCtC,OAAA;MAAAiC,QAAA,eAEEjC,OAAA;QAAAiC,QAAA,EAAIH,OAAO,CAACA;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GAFhBC,KAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnC,EAAA,CArDID,KAAK;EAAA,QAEaH,SAAS;AAAA;AAAAyC,EAAA,GAF3BtC,KAAK;AAuDX,eAAeA,KAAK;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}